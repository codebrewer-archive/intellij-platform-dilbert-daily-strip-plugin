class PropertiesVersion {
  String major
  String minor
  String revision
  String build

  PropertiesVersion(Properties properties) {
    major = properties['build.version.major']
    minor = properties['build.version.minor']
    revision = properties['build.version.revision']
    build = properties['build.number']
  }

  String toString() {
    return "${this.major}.${this.minor}.${this.revision}.${this.build}"
  }
}

buildscript {
  repositories {
    mavenCentral()
  }
}

plugins {
  id "org.jetbrains.intellij" version "0.3.1"
}

group = 'org.codebrewer'

apply plugin: 'idea'
apply plugin: 'org.jetbrains.intellij'
apply plugin: 'java'

sourceCompatibility = 1.8
targetCompatibility = 1.8

intellij {
  version = 'IC-2016.3'
  pluginName = 'DilbertDailyStrip'
}

patchPluginXml {
  // A build counter and date are maintained in build.properties and updating
  // them whenever plugin.xml is patched during a build seems reasonable
  //
  ant.propertyfile(file: 'src/main/resources/org/codebrewer/intellijplatform/plugin/dilbert/build/build.properties') {
    entry(key: 'build.number', type: 'int', default: '1', operation: '+')
    entry(key: 'build.date', type: 'date', value: 'now', pattern: 'MMMM d, yyyy')
  }

  def buildProperties = new Properties()
  buildProperties.load(file("src/main/resources/org/codebrewer/intellijplatform/plugin/dilbert/build/build.properties").newInputStream())
  version = new PropertiesVersion(buildProperties)
  untilBuild = ''
}
